//MOTOR CONTROL
#define IR_SENSOR_RIGHT 5
#define IR_SENSOR_LEFT 6
#define MOTOR_SPEED 186

//Right motor
int enableRightMotor = 11;
int rightMotorPin1 = 7;
int rightMotorPin2 = 8;

//Left motor
int enableLeftMotor = 3;
int leftMotorPin1 = 9;
int leftMotorPin2 = 10;

//digital read
int a, b,c;

void setup() {
  Serial.begin(9600);
  pinMode(12, INPUT);  //aldready there for start stop, now for direction
  pinMode(2, INPUT); 
  pinMode(13, INPUT); //if works,add  
  pinMode(LED_BUILTIN, OUTPUT);

  //MOTOR CONTROL (to increase the frequency of input)
  //The problem with TT gear motors is that, at very low pwm value it does not even rotate.
  //If we increase the PWM value then it rotates faster and our robot is not controlled in that speed and goes out of line.
  //For that we need to increase the frequency of analogWrite.
  //Below line is important to change the frequency of PWM signal on pin D3 and D11
  //Because of this, motor runs in controlled manner (lower speed) at high PWM value.
  //This sets frequecny as 7812.5 hz / 2 = 3900 hz

  // there is also a change in the frequency again, below, to have uninterrupted response from vlc module.
  TCCR2B = TCCR2B & B11111000 | B00000010;

  // put your setup code here, to run once:
  pinMode(enableRightMotor, OUTPUT);
  pinMode(rightMotorPin1, OUTPUT);
  pinMode(rightMotorPin2, OUTPUT);

  pinMode(enableLeftMotor, OUTPUT);
  pinMode(leftMotorPin1, OUTPUT);
  pinMode(leftMotorPin2, OUTPUT);

  pinMode(IR_SENSOR_RIGHT, INPUT);
  pinMode(IR_SENSOR_LEFT, INPUT);
}

void loop() {

  Serial.println("start");
  //MOTOR CONTROL
  int rightIRSensorValue = digitalRead(IR_SENSOR_RIGHT);
  int leftIRSensorValue = digitalRead(IR_SENSOR_LEFT);
  a = digitalRead(12);
  b = digitalRead(2);
  c = digitalRead(13);
  digitalWrite(LED_BUILTIN, LOW);

  if (a == 1 && b==0 && c==0) {
    rotateMotor(0, 0);
  }

  //left
  else if (a==0 && b == 1 && c==0) {

    int rightIRSensorValue = digitalRead(IR_SENSOR_RIGHT);
    int leftIRSensorValue = digitalRead(IR_SENSOR_LEFT);

    //If none of the sensors detects white line, then go straight
    if (rightIRSensorValue == LOW && leftIRSensorValue == LOW) {
      rotateMotor(MOTOR_SPEED *0.6, MOTOR_SPEED);
      digitalWrite(LED_BUILTIN, HIGH);
    }
    //If left sensor detects white line, then turn right
    else if (rightIRSensorValue == HIGH && leftIRSensorValue == LOW) {
      rotateMotor(-MOTOR_SPEED, MOTOR_SPEED);
    }
    //If right sensor detects white line, then turn left
    else if (rightIRSensorValue == LOW && leftIRSensorValue == HIGH) {
      rotateMotor(MOTOR_SPEED, -MOTOR_SPEED);
    }
    //If both the sensors detect white line, then stop
    else {
      rotateMotor(0, 0);
    }

  }

  //right
  else if (a==0 && b == 0 && c==1) {

    int rightIRSensorValue = digitalRead(IR_SENSOR_RIGHT);
    int leftIRSensorValue = digitalRead(IR_SENSOR_LEFT);

    //If none of the sensors detects white line, then go straight
    if (rightIRSensorValue == LOW && leftIRSensorValue == LOW) {
      rotateMotor(MOTOR_SPEED *0.6, MOTOR_SPEED);
      digitalWrite(LED_BUILTIN, HIGH);
    }
    //If left sensor detects white line, then turn right
    else if (rightIRSensorValue == HIGH && leftIRSensorValue == LOW) {
      rotateMotor(-MOTOR_SPEED, MOTOR_SPEED);
    }
    //If right sensor detects white line, then turn left
    else if (rightIRSensorValue == LOW && leftIRSensorValue == HIGH) {
      rotateMotor(MOTOR_SPEED, -MOTOR_SPEED);
    }
    //If both the sensors detect white line, then stop
    else {
      rotateMotor(0, 0);
    }

  }



  //straight
  else {

    int rightIRSensorValue = digitalRead(IR_SENSOR_RIGHT);
    int leftIRSensorValue = digitalRead(IR_SENSOR_LEFT);
    //If none of the sensors detects white line, then go straight
    if (rightIRSensorValue == LOW && leftIRSensorValue == LOW && random(0, 100) > 40) {
      rotateMotor(MOTOR_SPEED, MOTOR_SPEED);
    }
    //If left sensor detects white line, then turn right
    else if (rightIRSensorValue == HIGH && leftIRSensorValue == LOW) {
      rotateMotor(-MOTOR_SPEED, MOTOR_SPEED);
    }
    //If right sensor detects white line, then turn left
    else if (rightIRSensorValue == LOW && leftIRSensorValue == HIGH) {
      rotateMotor(MOTOR_SPEED, -MOTOR_SPEED);
    }
    //If both the sensors detect white line, then stop
    else {
      rotateMotor(0, 0);
    }
  }
}


//MOTOR CONTROL FUNCTION
void rotateMotor(int rightMotorSpeed, int leftMotorSpeed) {

  if (rightMotorSpeed < 0) {
    digitalWrite(rightMotorPin1, LOW);
    digitalWrite(rightMotorPin2, HIGH);
  } else if (rightMotorSpeed > 0) {
    digitalWrite(rightMotorPin1, HIGH);
    digitalWrite(rightMotorPin2, LOW);
  } else {
    digitalWrite(rightMotorPin1, LOW);
    digitalWrite(rightMotorPin2, LOW);
  }

  if (leftMotorSpeed < 0) {
    digitalWrite(leftMotorPin1, LOW);
    digitalWrite(leftMotorPin2, HIGH);
  } else if (leftMotorSpeed > 0) {
    digitalWrite(leftMotorPin1, HIGH);
    digitalWrite(leftMotorPin2, LOW);
  } else {
    digitalWrite(leftMotorPin1, LOW);
    digitalWrite(leftMotorPin2, LOW);
  }
  analogWrite(enableRightMotor, abs(rightMotorSpeed));
  analogWrite(enableLeftMotor, abs(leftMotorSpeed));
}

